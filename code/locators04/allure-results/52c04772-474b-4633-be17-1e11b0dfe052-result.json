{"name": "test_vwo_login[chromium]", "status": "broken", "statusDetails": {"message": "playwright._impl._api_types.Error: Page closed\n=========================== logs ===========================\nwaiting for get_by_role(\"Subscribe\")\n============================================================", "trace": "page = <Page url='https://awesomeqa.com/pw/locators1.html'>\n\n    @allure.description(\"VWO Login\")\n    @pytest.mark.positive\n    def test_vwo_login(page: Page) -> None:\n        page.goto(\"https://awesomeqa.com/pw/locators1.html\")\n        page.wait_for_load_state(\"networkidle\")\n        page.get_by_label(\"Subscribe\").check()\n        page.get_by_role(\"button\", name=\"Submit\").click()\n>       assert page.get_by_role(\"Subscribe\").is_checked() is True\n\ntest_locators_01.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../venv/lib/python3.11/site-packages/playwright/sync_api/_generated.py:17295: in is_checked\n    self._sync(self._impl_obj.is_checked(timeout=timeout))\n../../venv/lib/python3.11/site-packages/playwright/_impl/_locator.py:460: in is_checked\n    return await self._frame.is_checked(\n../../venv/lib/python3.11/site-packages/playwright/_impl/_frame.py:328: in is_checked\n    return await self._channel.send(\"isChecked\", locals_to_params(locals()))\n../../venv/lib/python3.11/site-packages/playwright/_impl/_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n../../venv/lib/python3.11/site-packages/playwright/_impl/_connection.py:482: in wrap_api_call\n    return await cb()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Channel object at 0x109a7b790>\nmethod = 'isChecked'\nparams = {'selector': 'internal:role=Subscribe', 'strict': True}\nreturn_as_dict = False\n\n    async def inner_send(\n        self, method: str, params: Optional[Dict], return_as_dict: bool\n    ) -> Any:\n        if params is None:\n            params = {}\n        callback = self._connection._send_message_to_server(self._guid, method, params)\n        if self._connection._error:\n            error = self._connection._error\n            self._connection._error = None\n            raise error\n        done, _ = await asyncio.wait(\n            {\n                self._connection._transport.on_error_future,\n                callback.future,\n            },\n            return_when=asyncio.FIRST_COMPLETED,\n        )\n        if not callback.future.done():\n            callback.future.cancel()\n>       result = next(iter(done)).result()\nE       playwright._impl._api_types.Error: Page closed\nE       =========================== logs ===========================\nE       waiting for get_by_role(\"Subscribe\")\nE       ============================================================\n\n../../venv/lib/python3.11/site-packages/playwright/_impl/_connection.py:97: Error"}, "description": "VWO Login", "parameters": [{"name": "browser_name", "value": "'chromium'"}], "start": 1694424855101, "stop": 1694424880797, "uuid": "fd5b591b-d287-4968-90c6-242baf0647ee", "historyId": "4d1862b1dec885222c0008b612429436", "testCaseId": "a15bd517bd870ff6acdf65d285ff95b0", "fullName": "code.locators04.test_locators_01#test_vwo_login", "labels": [{"name": "tag", "value": "positive"}, {"name": "parentSuite", "value": "code.locators04"}, {"name": "suite", "value": "test_locators_01"}, {"name": "host", "value": "MBP-C02DRR20MD6M"}, {"name": "thread", "value": "5544-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "code.locators04.test_locators_01"}]}